CREATE TABLE EXERCISE(NAME VARCHAR(255) NOT NULL,
						DESCRIPTION VARCHAR(255) NOT NULL,
						CURRENTGOAL VARCHAR(255) NOT NULL,
						BESTRESULT VARCHAR(255) NOT NULL,
						WEIGHT SMALLINT, #For strength exercises
						REPETITIONS SMALLINT, #For strength exercises
						SETS SMALLINT, #For strength exercises
						LENGTH SMALLINT, #For endurance exercises
						DURATION SMALLINT, #For endurance exercises
						PRIMARY KEY (NAME),
						CHECK (WEIGHT > 0), #Has to be a positive integer
						CHECK (REPETITIONS > 0),
						CHECK (SETS > 0), 
						CHECK (LENGTH > 0), 
						CHECK (DURATION > 0)
						);

CREATE TABLE WORKOUT(ID INT NOT NULL AUTO_INCREMENT,
                        NAME VARCHAR(255),
                        ISTEMPLATE BOOLEAN, #is this a workout template?
						WORKOUTTIME DATETIME,
						DURATION SMALLINT NOT NULL, #Number of minutes
						SHAPE SMALLINT(2),
						PERFORMANCE SMALLINT(2),
						WORKOUTNOTE VARCHAR(255),
						WEATHERCONDITIONS VARCHAR(255), #For outdoor activities
						AIRCONTITIONS VARCHAR(255), #For indoor activities
						NUMBEROFSPECTATORS SMALLINT, #For indoor activities
						PRIMARY KEY (ID),
						CHECK (DURATION > 0), #Has to be a positive integer
						CHECK (SHAPE > 0 AND SHAPE < 11), #Is rated by an integer between 1 and 10
						CHECK (PERFORMANCE > 0 AND PERFORMANCE < 11),
						CHECK (NUMBEROFSPECTATORS = NULL OR NUMBEROFSPECTATORS > -1) #If number of spectators is defined, it must be positive
						);

CREATE TABLE WORKOUTTEMPLATE(
                        TEMPLATEID INT NOT NULL,
                        WORKOUTID INT NOT NULL,
                        PRIMARY KEY (TEMPLATEID),
                        FOREIGN KEY (WORKOUTID) REFERENCES WORKOUT(ID)
                        );


CREATE TABLE EXERCISECATEGORY(NAME VARCHAR(255) NOT NULL,
						PRIMARY KEY (NAME)
						);

CREATE TABLE LOGENTRY(WORKOUTID INT NOT NULL,
						EXERCISENAME VARCHAR(255) NOT NULL,
						PRIMARY KEY (WORKOUTID, EXERCISENAME), #Relation defining the log entry. This is a weak entity - it only exists because of a given exercise in a given workout
						FOREIGN KEY (WORKOUTID) REFERENCES WORKOUT(ID)
						ON DELETE CASCADE, #Delete if exercise is deleted
						FOREIGN KEY (EXERCISENAME) REFERENCES EXERCISE(NAME)
						ON DELETE CASCADE #Delete if exercise is deleted
						);

CREATE TABLE CANREPLACE(EXERCISENAMEA VARCHAR(255) NOT NULL, #Relation: two exercises are similar
						EXERCISENAMEB VARCHAR(255) NOT NULL,
						PRIMARY KEY(EXERCISENAMEA,EXERCISENAMEB),
						FOREIGN KEY (EXERCISENAMEA) REFERENCES EXERCISE(NAME),
						FOREIGN KEY (EXERCISENAMEB) REFERENCES EXERCISE(NAME)
						);

CREATE TABLE EXERCISEINWORKOUT(EXERCISENAME VARCHAR(255) NOT NULL, #Relation: a workout containing an exercise
						WORKOUTID INT NOT NULL,
						PRIMARY KEY (EXERCISENAME, WORKOUTID),
						FOREIGN KEY (EXERCISENAME) REFERENCES EXERCISE(NAME),
						FOREIGN KEY (WORKOUTID) REFERENCES WORKOUT(ID)
						);

CREATE TABLE EXERCISEINCATEGORY(EXERCISENAME VARCHAR(255) NOT NULL, #Relation: a category containing an exercise
						CATEGORYNAME VARCHAR(255) NOT NULL,
						PRIMARY KEY (EXERCISENAME, CATEGORYNAME),
						FOREIGN KEY (EXERCISENAME) REFERENCES EXERCISE(NAME),
						FOREIGN KEY (CATEGORYNAME) REFERENCES EXERCISECATEGORY(NAME)
						);

CREATE TABLE CATEGORYINCATEGORY(PARENTCATEGORY VARCHAR(255) NOT NULL, #Relation: a category containing another category
						CHILDCATEGORY VARCHAR(255) NOT NULL,
						PRIMARY KEY (PARENTCATEGORY, CHILDCATEGORY),
						FOREIGN KEY (PARENTCATEGORY) REFERENCES EXERCISECATEGORY(NAME),
						FOREIGN KEY (CHILDCATEGORY) REFERENCES EXERCISECATEGORY(NAME)
						);

CREATE TABLE EXERCISE(NAME VARCHAR NOT NULL,
						DESCRIPTION VARCHAR NOT NULL,
						CURRENTGOAL VARCHAR NOT NULL,
						BESTRESULT VARCHAR NOT NULL,
						WEIGHT SMALLINT, #For strength exercises
						REPETITIONS SMALLINT, #For strength exercises
						SETS SMALLINT, #For strength exercises
						LENGTH SMALLINT, #For endurance exercises
						DURATION SMALLINT, #For endurance exercises
						PRIMARY KEY (NAME)
						CHECK (WEIGHT > 0), #Has to be a positive integer
						CHECK (REPETITIONS > 0),
						CHECK (SETS > 0), 
						CHECK (LENGTH > 0), 
						CHECK (DURATION > 0),
						);

CREATE TABLE WORKOUT(WORKOUTID INT NOT NULL AUTO_INCREMENT,
						WORKOUTTIME DATETIME(),
						DURATION SMALLINT NOT NULL, #Number of minutes
						SHAPE SMALLINT(2),
						PERFORMANCE SMALLINT(2),
						WORKOUTNOTE VARCHAR,
						WEATHERCONDITIONS VARCHAR, #For outdoor activities
						AIRCONTITIONS VARCHAR, #For indoor activities
						NUMBEROFSPECTATORS SMALLINT, #For indoor activities
						PRIMARY KEY (WORKOUTID),
						CHECK (DURATION > 0), #Has to be a positive integer
						CHECK (SHAPE > 0 AND SHAPE < 11), #Is rated by an integer between 1 and 10
						CHECK (PERFORMANCE > 0 AND PERFORMANCE < 11),
						CHECK (NUMBEROFSPECTATORS = NULL OR NUMBEROFSPECTATORS > -1) #If number of spectators is defined, it must be positive
						);

CREATE TABLE EXERCISECATEGORY(NAME VARCHAR NOT NULL,
						PRIMARY KEY (NAME)
						);

CREATE TABLE LOGENTRY(WORKOUTID INT NOT NULL,
						EXERCISENAME VARCHAR NOT NULL,
						PRIMARY KEY (WORKOUTID, EXERCISENAME), #Relation defining the log entry. This is a weak entity - it only exists because of a given exercise in a given workout 
						FOREIGN KEY (WORKOUTID) REFERENCES WORKOUT(WORKOUTID),
						FOREIGN KEY (EXERCISENAME) REFERENCES EXERCISE(EXERCISENAME),
						ON DELETE CASCASDE #Delete if workout/exercise is deleted
						);

CREATE TABLE CANREPLACE(EXERCISENAMEA VARCHAR NOT NULL, #Relation: two exercises are similar
						EXERCISENAMEB VARCHAR NOT NULL,
						FOREIGN KEY (EXERCISENAMEA) REFERENCES EXERCISE(EXERCISENAMEA),
						FOREIGN KEY (EXERCISENAMEB) REFERENCES EXERCISE(EXERCISENAMEB)
						);

CREATE TABLE EXERCISEINWORKOUT(EXERCISENAME VARCHAR NOT NULL, #Relation: a workout containing an exercise
						WORKOUTID INT NOT NULL,
						FOREIGN KEY (EXERCISENAME) REFERENCES EXERCISE(EXERCISENAME),
						FOREIGN KEY (WORKOUTID) REFERENCES WORKOUT(WORKOUTID)
						);

CREATE TABLE EXERCISEINCATEGORY(EXERCISENAME VARCHAR NOT NULL, #Relation: a category containing an exercise
						CATEGORYNAME VARCHAR NOT NULL,
						FOREIGN KEY (EXERCISENAME) REFERENCES EXERCISE(EXERCISENAME),
						FOREIGN KEY (CATEGORYNAME) REFERENCES CATEGORY(CATEGORYNAME)
						);

CREATE TABLE CATEGORYINCATEGORY(PARENTCATEGORY VARCHAR NOT NULL, #Relation: a category containing another category
						CHILDCATEGORY VARCHAR NOT NULL,
						FOREIGN KEY (PARENTCATEGORY) REFERENCES EXERCISECATEGORY(PARENTCATEGORY),
						FOREIGN KEY (CHILDCATEGORY) REFERENCES EXERCISECATEGORY(CHILDCATEGORY)
						);
